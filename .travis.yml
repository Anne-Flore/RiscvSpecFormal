language: generic
sudo: true
dist: xenial

cache:
  directories:
  - $HOME/verilator-binary
  - $HOME/haskell-files
  - $HOME/verilog-file
  - $HOME/obj_dir

env:
  global:
  - PATH=/opt/ghc/bin:$HOME/verilator-binary/bin:$TRAVIS_BUILD_DIR/riscv64-unknown-elf-gcc-8.2.0-2019.02.0-x86_64-linux-ubuntu14/bin:$PATH

jobs:
  include:
  - stage: generate_verilator_binary_and_haskell_files
    script:
    - git clone http://git.veripool.org/git/verilator
    - cd verilator
    - autoconf
    - ./configure --prefix=$HOME/verilator-binary
    - make -j 4
    - make install 
    - cd ..

  - script:
    - sudo add-apt-repository ppa:jgross-h/many-coq-versions --yes
    - sudo apt-get update
    - sudo apt-get install coq-8.9.0 --yes

    - make -j 4
    - rm -rf $HOME/haskell-files/*
    - mkdir -p $HOME/haskell-files
    - cp *.hs $HOME/haskell-files/

  - stage: generate_verilog-file
    script:
    - sudo add-apt-repository ppa:hvr/ghc --yes
    - sudo apt-get update
    - sudo apt-get install ghc-8.6.5 --yes

    - cat Target.raw > Target.hs
    - echo "rtlMod = model32" >> Target.hs
    - ghc -O0 --make Kami/PrettyPrintVerilog.hs
    - ./Kami/PrettyPrintVerilog > $HOME/verilog-file/System32.sv

  - script:
    - sudo add-apt-repository ppa:hvr/ghc --yes
    - sudo apt-get update
    - sudo apt-get install ghc-8.6.5 --yes

    - cat Target.raw > Target.hs
    - echo "rtlMod = model64" >> Target.hs
    - ghc -O0 --make Kami/PrettyPrintVerilog.hs
    - ./Kami/PrettyPrintVerilog > $HOME/verilog-file/System64.sv

  - stage: generate_obj_dir
    script:
    - sudo apt-get install clang --yes

    - cp $HOME/verilog-file/System32.sv ./System.sv
    - verilator --top-module system -Wno-CMPCONST -O0 -Wno-WIDTH --cc System.sv --trace --trace-underscore -Wno-fatal --exe System.cpp
    - make -j -C obj_dir -f Vsystem.mk Vsystem CXX=clang LINK=clang
    - mv obj_dir $HOME/obj_dir/obj_dir32

  - script:
    - sudo apt-get install clang --yes

    - cp $HOME/verilog-file/System64.sv ./System.sv
    - verilator --top-module system -Wno-CMPCONST -O0 -Wno-WIDTH --cc System.sv --trace --trace-underscore -Wno-fatal --exe System.cpp
    - make -j -C obj_dir -f Vsystem.mk Vsystem CXX=clang LINK=clang
    - mv obj_dir $HOME/obj_dir/obj_dir64

  - stage: run_tests
    script:
    - sudo apt-get install parallel --yes

    - mv $HOME/obj_dir/obj_dir32 ./obj_dir
    - ls $HOME/riscv/rv32u?-p-* | parallel -P 0 -j0 "(file {} | (grep -iq elf && (./runElf.sh {} || exit 1))) || (file {} | grep -viq elf)"

  - script:
    - sudo apt-get install parallel --yes

    - mv $HOME/obj_dir/obj_dir64 ./obj_dir
    - ls $HOME/riscv/rv64u?-p-* | parallel -P 0 -j0 "(file {} | (grep -iq elf && (./runElf.sh {} || exit 1))) || (file {} | grep -viq elf)"

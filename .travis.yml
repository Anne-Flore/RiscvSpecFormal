language: generic
sudo: true
dist: xenial

cache:
  directories:
  - $HOME/riscv64-gcc
  - $HOME/riscv
  - $HOME/verilator-binary
  - $HOME/haskell-files
  - $HOME/verilog-file

env:
  global:
  - PATH=/opt/ghc/bin:$HOME/verilator-binary/bin:$HOME/riscv64-gcc/riscv64-unknown-elf-gcc-8.2.0-2019.02.0-x86_64-linux-ubuntu14/bin:$PATH

jobs:
  include:
  - stage: generate_riscv_tests_with_verilator_binary_and_haskell_files
    script:
    - wget https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.2.0-2019.02.0-x86_64-linux-ubuntu14.tar.gz
    - tar xzf riscv64-unknown-elf-gcc-8.2.0-2019.02.0-x86_64-linux-ubuntu14.tar.gz
    - rm -rf $HOME/riscv64-gcc/*
    - mv riscv64-unknown-elf-gcc-8.2.0-2019.02.0-x86_64-linux-ubuntu14/ $HOME/riscv64-gcc/

    - git clone https://github.com/riscv/riscv-tests
    - cd riscv-tests
    - git submodule update --init --recursive
    - autoconf
    - ./configure --prefix=$HOME/riscv
    - sed -i -e "s/0x80000000/00000000/g" ./env/p/link.ld
    - make -j
    - make install
    - cd ..

  - script:
    - git clone http://git.veripool.org/git/verilator
    - cd verilator
    - autoconf
    - ./configure --prefix=$HOME/verilator-binary
    - make -j 4
    - make install 
    - cd ..

  - script:
    - sudo add-apt-repository ppa:jgross-h/many-coq-versions --yes
    - sudo apt-get update
    - sudo apt-get install coq-8.9.0 --yes

    - make -j 4
    - rm -rf $HOME/haskell-files/*
    - mkdir -p $HOME/haskell-files
    - cp *.hs $HOME/haskell-files/

  - stage: generate_verilog-file
    script:
    - sudo add-apt-repository ppa:hvr/ghc --yes
    - sudo apt-get update
    - sudo apt-get install ghc-8.6.5 --yes

    - ls $HOME/haskell-files
    - cp $HOME/haskell-files/* ./
    - cat Haskell/Target.raw > Haskell/Target.hs
    - echo "rtlMod = model32" >> Haskell/Target.hs
    - sed -i -e '0,/^import/{s/^import/import qualified Data.Bits (testBit, setBit, shiftL, shiftR)\nimport qualified Data.Char(chr, ord)\nimport/}' *.hs
    - ghc Kami/FixLits.hs -o fixlits
    - ./fixlits *.hs
    - ghc -O0 --make -iHaskell Kami/PrettyPrintVerilog.hs
    - ./Kami/PrettyPrintVerilog > $HOME/verilog-file/System32.sv

  - script:
    - sudo add-apt-repository ppa:hvr/ghc --yes
    - sudo apt-get update
    - sudo apt-get install ghc-8.6.5 --yes

    - ls $HOME/haskell-files
    - cp $HOME/haskell-files/* ./
    - cat Haskell/Target.raw > Haskell/Target.hs
    - echo "rtlMod = model64" >> Haskell/Target.hs
    - sed -i -e '0,/^import/{s/^import/import qualified Data.Bits (testBit, setBit, shiftL, shiftR)\nimport qualified Data.Char(chr, ord)\nimport/}' *.hs
    - ghc Kami/FixLits.hs -o fixlits
    - ./fixlits *.hs
    - ghc -O0 --make -iHaskell Kami/PrettyPrintVerilog.hs
    - ./Kami/PrettyPrintVerilog > $HOME/verilog-file/System64.sv

  - stage: generate_obj_dir_and_run_tests
    script:
    - sudo apt-get install clang parallel --yes

    - ls $HOME/verilog-file
    - cp $HOME/verilog-file/System32.sv ./System.sv
    - verilator --top-module system -Wno-CMPCONST -O0 -Wno-WIDTH --cc System.sv --trace --trace-underscore -Wno-fatal --exe System.cpp
    - make -j -C obj_dir -f Vsystem.mk Vsystem CXX=clang LINK=clang
    - travis_wait 50 ls $HOME/riscv/share/riscv-tests/isa/rv32u?-p-* | parallel -P 0 -j0 "(file {} | (grep -iq elf && ./runElf.sh {})) || (file {} | grep -viq elf)"

  - script:
    - sudo apt-get install clang parallel --yes

    - ls $HOME/verilog-file
    - cp $HOME/verilog-file/System64.sv ./System.sv
    - verilator --top-module system -Wno-CMPCONST -O0 -Wno-WIDTH --cc System.sv --trace --trace-underscore -Wno-fatal --exe System.cpp
    - make -j -C obj_dir -f Vsystem.mk Vsystem CXX=clang LINK=clang
    - travis_wait 50 ls $HOME/riscv/share/riscv-tests/isa/rv64u?-p-* | parallel -P 0 -j0 "(file {} | (grep -iq elf && ./runElf.sh {})) || (file {} | grep -viq elf)"


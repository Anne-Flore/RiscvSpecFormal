language: c++
compiler: clang
dist: xenial
jobs:
  include:
  - stage: RiscvFormalDependencies
    script:
    - cd $TRAVIS_BUILD_DIR
    - git clone http://git.veripool.org/git/verilator
    - unset VERILATOR_ROOT
    - cd verilator
    - autoconf
    - ./configure --prefix=$TRAVIS_BUILD_DIR/binaries/verilator && make && make install
  - script:
    - cd $TRAVIS_BUILD_DIR
    - wget https://downloads.haskell.org/~ghc/8.6.5/ghc-8.6.5-x86_64-deb9-linux.tar.xz
    - tar xf ghc-8.6.5-x86_64-deb9-linux.tar.xz
    - cd ghc-8.6.5
    - ./configure --prefix=$TRAVIS_BUILD_DIR/binaries/haskell

  - stage: arbitrarynameb 
    install:
    - export PATH=$TRAVIS_BUILD_DIR/binaries/haskell/bin:$TRAVIS_BUILD_DIR/binaries/verilator/bin:$PATH
    - echo $PATH
    

#
#
#before_install:
#  - cabal update
#  - cabal install mtl-2.2.2
#  - sudo apt install clang
#
#  # Verilator
#  - if [ ! -d $TRAVIS_BUILD_DIR/verilator-compiled ];
#    then
#      cd $TRAVIS_BUILD_DIR &&
#      wget https://github.com/llee454/verilator/archive/compiled.zip &&
#      unzip compiled.zip &&
#      cd verilator-compiled &&
#      tar --bzip2 -xvf bin-042419.tar.bz2 &&
#      chmod a+x -R bin &&
#      export PATH=$PATH:$(pwd)/bin;
#    else
#      echo "Verilator installed. Skipping.";
#      ls $TRAVIS_BUILD_DIR;
#    fi
#
#  # Coq
## Coq (using source Coq)
##  - cd $TRAVIS_BUILD_DIR
##  - yes '' | sh <(curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh)
##  - yes | opam init --disable-sandboxing --reinit
##  - opam --version
##  - yes | opam repo add coq-released http://coq.inria.fr/opam/released --set-default
##  - opam switch create ocaml --yes
##  - eval $(opam env)
##  - opam install coq.8.9.0 --yes
##  - eval $(opam env)
#
## Coq (using precompiled source)
#  - if [ ! -d ~/.opam ];
#    then
#      cd $TRAVIS_BUILD_DIR &&
#      wget https://github.com/llee454/opam-coq/archive/master.zip &&
#      unzip master.zip &&
#      cp -rf opam-coq-master/opam ~/.opam &&
#      yes '' | sh <(curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh) &&
#      yes | opam init --disable-sandboxing --reinit &&
#      eval $(opam env);
#    else
#      echo "Coq installed. Skipping.";
#      ls ~;
#    fi
#
#install:
#  - cd /home/travis/build/sifive/RiscvSpecFormal
#  - make 
#
#script:
#  - ./runTests.sh -v -x 32 -p riscv-tests
#  - ./runTests.sh -v -x 64 -p riscv-tests
